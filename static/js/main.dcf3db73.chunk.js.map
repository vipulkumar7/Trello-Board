{"version":3,"sources":["actions/listsActions.js","actions/actionType.js","components/TrelloCard.js","components/TrelloActionButton.js","components/TrelloList.js","components/App.js","reducers/listsReducer.js","reducers/rootReducer.js","store/store.js","serviceWorker.js","index.js"],"names":["addList","title","type","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","addCard","listID","text","deleteCard","id","TrelloCard","props","handleDeleteCard","actionCreator","this","index","String","provided","ref","innerRef","draggableProps","dragHandleProps","Card","style","styels","cardContainer","CardContent","Typography","gutterBottom","icon","onClick","Icon","Component","marginBottom","marginLeft","cursor","connect","dispatch","bindActionCreators","TrelloActionButton","openForm","setState","formOpen","closeForm","handleInputChange","event","target","value","handleAddList","state","handleAddCard","renderAddButton","list","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","styles","openForButtonGroup","opacity","color","background","renderForm","console","log","placeholder","buttonTitle","minHeight","minWidth","padding","resize","width","overflow","outline","border","autoFocus","onBlur","onChange","formButtonGroup","Button","onMouseDown","variant","backgroundColor","display","alignItems","borderRadius","height","paddinLeft","marginTop","container","marginRight","TrelloList","cards","droppableId","droppableProps","map","card","key","App","onDragEnd","result","destination","source","lists","direction","listContainer","flexDirection","cardID","intialState","listsReducer","action","newList","newCard","newState","splice","find","listStart","listEnd","rootReducer","combineReducers","store","createStore","RootReducer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dcf3db73.chunk.js","sourcesContent":["import { ADD_CARD, DELETE_CARD, ADD_LIST, DRAG_HAPPENED } from './actionType';\r\n\r\nexport const addList = (title) => {\r\n\treturn {\r\n\t\ttype: ADD_LIST,\r\n\t\tpayload: title,\r\n\t};\r\n};\r\n\r\nexport const sort = (droppableIdStart, droppableIdEnd, droppableIndexStart, droppableIndexEnd, draggableId, type) => {\r\n\treturn {\r\n\t\ttype: DRAG_HAPPENED,\r\n\t\tpayload: {\r\n\t\t\tdroppableIdStart,\r\n\t\t\tdroppableIdEnd,\r\n\t\t\tdroppableIndexStart,\r\n\t\t\tdroppableIndexEnd,\r\n\t\t\tdraggableId,\r\n\t\t\ttype,\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport const addCard = (listID, text) => {\r\n\treturn {\r\n\t\ttype: ADD_CARD,\r\n\t\tpayload: { text, listID },\r\n\t};\r\n};\r\n\r\nexport const deleteCard = (listID, id) => {\r\n\treturn {\r\n\t\ttype: DELETE_CARD,\r\n\t\tpayload: { listID, id },\r\n\t};\r\n};\r\n","export const ADD_CARD = 'ADD_CARD';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const DRAG_HAPPENED = 'DRAG_HAPPENED';\r\nexport const DELETE_CARD = 'DELETE_CARD';\r\n","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { Icon } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actionCreator from '../actions/listsActions';\r\nclass TrelloCard extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\thandleDeleteCard = () => {\r\n\t\tthis.props.actionCreator.deleteCard(this.props.listID, this.props.id);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { text, id, index, listID } = this.props;\r\n\t\treturn (\r\n\t\t\t<Draggable draggableId={String(id)} index={index}>\r\n\t\t\t\t{(provided) => (\r\n\t\t\t\t\t<div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n\t\t\t\t\t\t<Card style={styels.cardContainer}>\r\n\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t<Typography gutterBottom>{text}</Typography>\r\n\t\t\t\t\t\t\t\t<div style={styels.icon} onClick={this.handleDeleteCard}>\r\n\t\t\t\t\t\t\t\t\t<Icon>delete</Icon>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Draggable>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst styels = {\r\n\tcardContainer: {\r\n\t\tmarginBottom: 8,\r\n\t},\r\n\ticon: {\r\n\t\tmarginLeft: 250,\r\n\t\tcursor: 'pointer',\r\n\t},\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tactionCreator: bindActionCreators(actionCreator, dispatch),\r\n\t};\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(TrelloCard);\r\n","import React, { Component } from 'react';\r\nimport { Icon, Button } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport { connect } from 'react-redux';\r\nimport Textarea from 'react-textarea-autosize';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actionCreator from '../actions/listsActions';\r\n\r\nclass TrelloActionButton extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tformOpen: false,\r\n\t\t\ttext: '',\r\n\t\t};\r\n\t}\r\n\topenForm = () => {\r\n\t\tthis.setState({ formOpen: true });\r\n\t};\r\n\r\n\tcloseForm = () => {\r\n\t\tthis.setState({ formOpen: false });\r\n\t};\r\n\r\n\thandleInputChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\ttext: event.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\thandleAddList = () => {\r\n\t\tconst { text } = this.state;\r\n\r\n\t\tif (text) {\r\n\t\t\tthis.setState({\r\n\t\t\t\ttext: '',\r\n\t\t\t});\r\n\t\t\tthis.props.actionCreator.addList(text);\r\n\t\t}\r\n\t\treturn;\r\n\t};\r\n\r\n\thandleAddCard = () => {\r\n\t\tconst { listID } = this.props;\r\n\t\tconst { text } = this.state;\r\n\r\n\t\tif (text) {\r\n\t\t\tthis.setState({\r\n\t\t\t\ttext: '',\r\n\t\t\t});\r\n\t\t\tthis.props.actionCreator.addCard(listID, text);\r\n\t\t}\r\n\t};\r\n\r\n\trenderAddButton = () => {\r\n\t\tconst { list } = this.props;\r\n\t\tconst buttonText = list ? 'Add another list' : 'Add another card';\r\n\t\tconst buttonTextOpacity = list ? 1 : 0.5;\r\n\t\tconst buttonTextColor = list ? 'white' : 'inherit';\r\n\t\tconst buttonTextBackground = list ? 'rgba(0,0,0,.15)' : 'inherit';\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tonClick={this.openForm}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...styles.openForButtonGroup,\r\n\t\t\t\t\topacity: buttonTextOpacity,\r\n\t\t\t\t\tcolor: buttonTextColor,\r\n\t\t\t\t\tbackground: buttonTextBackground,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Icon>add</Icon>\r\n\t\t\t\t<p>{buttonText}</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\trenderForm = () => {\r\n\t\tconst { list } = this.props;\r\n\t\tconsole.log(list);\r\n\t\tconst placeholder = list ? 'Enter list title...' : 'Enter a title for this card';\r\n\t\tconst buttonTitle = list ? 'Add List' : 'Add Card';\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Card\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tminHeight: 85,\r\n\t\t\t\t\t\tminWidth: 272,\r\n\t\t\t\t\t\tpadding: '6px 8px 2px',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Textarea\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tresize: 'none',\r\n\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\toverflow: 'hidden',\r\n\t\t\t\t\t\t\toutline: 'none',\r\n\t\t\t\t\t\t\tborder: 'none',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\tonBlur={this.closeForm}\r\n\t\t\t\t\t\tvalue={this.state.text}\r\n\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<div style={styles.formButtonGroup}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonMouseDown={list ? this.handleAddList : this.handleAddCard}\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tstyle={{ color: 'white', backgroundColor: '#5aac44' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{buttonTitle}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Icon style={{ marginLeft: 10, cursor: 'pointer' }}>close</Icon>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn this.state.formOpen ? this.renderForm() : this.renderAddButton();\r\n\t}\r\n}\r\n\r\nconst styles = {\r\n\topenForButtonGroup: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tcursor: 'pointer',\r\n\t\tborderRadius: 3,\r\n\t\theight: 36,\r\n\t\twidth: 272,\r\n\t\tpaddinLeft: 10,\r\n\t},\r\n\tformButtonGroup: {\r\n\t\tmarginTop: 10,\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t},\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tactionCreator: bindActionCreators(actionCreator, dispatch),\r\n\t};\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(TrelloActionButton);\r\n","import React from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport TrelloCard from './TrelloCard';\r\nimport TrelloActionButton from './TrelloActionButton';\r\n\r\nconst TrelloList = ({ title, cards, listID, index }) => {\r\n\treturn (\r\n\t\t<Draggable draggableId={String(listID)} index={index}>\r\n\t\t\t{(provided) => (\r\n\t\t\t\t<div\r\n\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t{...provided.dragHandleProps}\r\n\t\t\t\t\tstyle={styles.container}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Droppable droppableId={String(listID)}>\r\n\t\t\t\t\t\t{(provided) => (\r\n\t\t\t\t\t\t\t<div {...provided.droppableProps} ref={provided.innerRef}>\r\n\t\t\t\t\t\t\t\t<h4>{title}</h4>\r\n\t\t\t\t\t\t\t\t{cards.map((card, index) => (\r\n\t\t\t\t\t\t\t\t\t<TrelloCard\r\n\t\t\t\t\t\t\t\t\t\tkey={card.id}\r\n\t\t\t\t\t\t\t\t\t\ttext={card.text}\r\n\t\t\t\t\t\t\t\t\t\tid={card.id}\r\n\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t\tlistID={listID}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t\t\t\t<TrelloActionButton listID={listID} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Droppable>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Draggable>\r\n\t);\r\n};\r\n\r\nconst styles = {\r\n\tcontainer: {\r\n\t\tbackgroundColor: '#dfe3e6',\r\n\t\tborderRadius: 3,\r\n\t\twidth: 300,\r\n\t\theight: '100%',\r\n\t\tpadding: 8,\r\n\t\tmarginRight: 8,\r\n\t},\r\n};\r\n\r\nexport default TrelloList;\r\n","import React, { Component } from 'react';\r\nimport TrelloList from './TrelloList';\r\nimport { connect } from 'react-redux';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport TrelloActionButton from './TrelloActionButton';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actionCreator from '../actions/listsActions';\r\nclass App extends Component {\r\n\tonDragEnd = (result) => {\r\n\t\tconst { destination, source, draggableId, type } = result;\r\n\r\n\t\tif (!destination) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.props.actionCreator.sort(\r\n\t\t\tsource.droppableId,\r\n\t\t\tdestination.droppableId,\r\n\t\t\tsource.index,\r\n\t\t\tdestination.index,\r\n\t\t\tdraggableId,\r\n\t\t\ttype\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { lists } = this.props;\r\n\t\treturn (\r\n\t\t\t<DragDropContext onDragEnd={this.onDragEnd}>\r\n\t\t\t\t<h2>Trello Board</h2>\r\n\t\t\t\t<Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n\t\t\t\t\t{(provided) => (\r\n\t\t\t\t\t\t<div {...provided.droppableProps} ref={provided.innerRef} style={styles.listContainer}>\r\n\t\t\t\t\t\t\t{lists.map((list, index) => (\r\n\t\t\t\t\t\t\t\t<TrelloList\r\n\t\t\t\t\t\t\t\t\tkey={list.id}\r\n\t\t\t\t\t\t\t\t\tlistID={list.id}\r\n\t\t\t\t\t\t\t\t\ttitle={list.title}\r\n\t\t\t\t\t\t\t\t\tcards={list.cards}\r\n\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t\t\t<TrelloActionButton list />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Droppable>\r\n\t\t\t</DragDropContext>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst styles = {\r\n\tlistContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t},\r\n};\r\nconst mapStateToProps = (state) => ({\r\n\tlists: state.lists,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tactionCreator: bindActionCreators(actionCreator, dispatch),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { ADD_CARD, ADD_LIST, DRAG_HAPPENED, DELETE_CARD } from '../actions/actionType';\r\n\r\nlet listID = 0;\r\nlet cardID = 0;\r\n\r\nconst intialState = [];\r\nconst listsReducer = (state = intialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_LIST: {\r\n\t\t\tconst newList = {\r\n\t\t\t\ttitle: action.payload,\r\n\t\t\t\tcards: [],\r\n\t\t\t\tid: `list-${listID}`,\r\n\t\t\t};\r\n\t\t\tlistID += 1;\r\n\t\t\treturn [...state, newList];\r\n\t\t}\r\n\r\n\t\tcase ADD_CARD: {\r\n\t\t\tconst newCard = {\r\n\t\t\t\ttext: action.payload.text,\r\n\t\t\t\tid: `card-${cardID}`,\r\n\t\t\t};\r\n\t\t\tcardID += 1;\r\n\r\n\t\t\tconst newState = state.map((list) => {\r\n\t\t\t\tif (list.id === action.payload.listID) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...list,\r\n\t\t\t\t\t\tcards: [...list.cards, newCard],\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn list;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\tcase DRAG_HAPPENED: {\r\n\t\t\tconst {\r\n\t\t\t\tdroppableIdStart,\r\n\t\t\t\tdroppableIdEnd,\r\n\t\t\t\tdroppableIndexStart,\r\n\t\t\t\tdroppableIndexEnd,\r\n\t\t\t\tdroppableId,\r\n\t\t\t\ttype,\r\n\t\t\t} = action.payload;\r\n\t\t\tconst newState = [...state];\r\n\r\n\t\t\t// Dragging lists around\r\n\t\t\tif (type === 'list') {\r\n\t\t\t\tconst list = newState.splice(droppableIndexStart, 1);\r\n\t\t\t\tnewState.splice(droppableIndexEnd, 0, ...list);\r\n\t\t\t\treturn newState;\r\n\t\t\t}\r\n\t\t\tif (droppableIdStart === droppableIdEnd) {\r\n\t\t\t\t// In the same list\r\n\r\n\t\t\t\tconst list = state.find((list) => droppableIdStart === list.id);\r\n\t\t\t\tconst card = list.cards.splice(droppableIndexStart, 1);\r\n\t\t\t\tlist.cards.splice(droppableIndexEnd, 0, ...card);\r\n\t\t\t}\r\n\r\n\t\t\t// In other list\r\n\t\t\tif (droppableIdStart !== droppableIdEnd) {\r\n\t\t\t\t// Find the list where drag happend\r\n\t\t\t\tconst listStart = state.find((list) => droppableIdStart === list.id);\r\n\r\n\t\t\t\t// Pull out the card from list\r\n\t\t\t\tconst card = listStart.cards.splice(droppableIndexStart, 1);\r\n\r\n\t\t\t\t// Find the where drag ended\r\n\t\t\t\tconst listEnd = state.find((list) => droppableIdEnd === list.id);\r\n\r\n\t\t\t\t// Put the card in the new list\r\n\t\t\t\tlistEnd.cards.splice(droppableIndexEnd, 0, ...card);\r\n\t\t\t}\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\tcase DELETE_CARD: {\r\n\t\t\tconst { listID, id } = action.payload;\r\n\t\t\tconsole.log(id);\r\n\r\n\t\t\tconst newCard = {\r\n\t\t\t\ttext: action.payload.text,\r\n\t\t\t\tid: `card-${cardID}`,\r\n\t\t\t};\r\n\r\n\t\t\tconsole.log(newCard.id);\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default listsReducer;\r\n","import { combineReducers } from 'redux';\r\nimport listsReducer from './listsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tlists: listsReducer,\r\n});\r\nexport default rootReducer;\r\n","import { createStore } from 'redux';\r\nimport RootReducer from '../reducers/rootReducer';\r\nconst store = createStore(RootReducer);\r\nexport default store;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport store from './store/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}